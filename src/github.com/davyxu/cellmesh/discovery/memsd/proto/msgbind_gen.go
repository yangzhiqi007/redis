// Auto generated by github.com/davyxu/cellmesh/protogen
// DO NOT EDIT!

package proto

import (
	"github.com/davyxu/cellnet"
	"github.com/davyxu/cellnet/codec"
	_ "github.com/davyxu/cellnet/codec/protoplus"
	"reflect"
)

// Make compiler import happy
var (
	_ cellnet.Event
	_ codec.CodecRecycler
	_ reflect.Type
)

// memsd
var (
	Handle_Memsd_AuthREQ        = func(ev cellnet.Event) { panic("'AuthREQ' not handled") }
	Handle_Memsd_ClearKeyREQ    = func(ev cellnet.Event) { panic("'ClearKeyREQ' not handled") }
	Handle_Memsd_ClearSvcREQ    = func(ev cellnet.Event) { panic("'ClearSvcREQ' not handled") }
	Handle_Memsd_DeleteValueREQ = func(ev cellnet.Event) { panic("'DeleteValueREQ' not handled") }
	Handle_Memsd_GetValueREQ    = func(ev cellnet.Event) { panic("'GetValueREQ' not handled") }
	Handle_Memsd_PingACK        = func(ev cellnet.Event) { panic("'PingACK' not handled") }
	Handle_Memsd_SetValueREQ    = func(ev cellnet.Event) { panic("'SetValueREQ' not handled") }
	Handle_Memsd_Default        func(ev cellnet.Event)
)

func GetMessageHandler(svcName string) cellnet.EventCallback {

	switch svcName {
	case "memsd":
		return func(ev cellnet.Event) {
			switch ev.Message().(type) {
			case *AuthREQ:
				Handle_Memsd_AuthREQ(ev)
			case *ClearKeyREQ:
				Handle_Memsd_ClearKeyREQ(ev)
			case *ClearSvcREQ:
				Handle_Memsd_ClearSvcREQ(ev)
			case *DeleteValueREQ:
				Handle_Memsd_DeleteValueREQ(ev)
			case *GetValueREQ:
				Handle_Memsd_GetValueREQ(ev)
			case *PingACK:
				Handle_Memsd_PingACK(ev)
			case *SetValueREQ:
				Handle_Memsd_SetValueREQ(ev)
			default:
				if Handle_Memsd_Default != nil {
					Handle_Memsd_Default(ev)
				}
			}
		}
	}

	return nil
}

func init() {

	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*SetValueREQ)(nil)).Elem(),
		ID:    44965,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*SetValueACK)(nil)).Elem(),
		ID:    6796,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*GetValueREQ)(nil)).Elem(),
		ID:    43673,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*GetValueACK)(nil)).Elem(),
		ID:    5504,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*DeleteValueREQ)(nil)).Elem(),
		ID:    64172,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*DeleteValueACK)(nil)).Elem(),
		ID:    26003,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ValueChangeNotifyACK)(nil)).Elem(),
		ID:    52671,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ValueDeleteNotifyACK)(nil)).Elem(),
		ID:    35212,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*AuthREQ)(nil)).Elem(),
		ID:    7726,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*AuthACK)(nil)).Elem(),
		ID:    35093,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ClearSvcREQ)(nil)).Elem(),
		ID:    36847,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ClearSvcACK)(nil)).Elem(),
		ID:    64214,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ClearKeyREQ)(nil)).Elem(),
		ID:    6444,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*ClearKeyACK)(nil)).Elem(),
		ID:    33811,
	})
	cellnet.RegisterMessageMeta(&cellnet.MessageMeta{
		Codec: codec.MustGetCodec("protoplus"),
		Type:  reflect.TypeOf((*PingACK)(nil)).Elem(),
		ID:    16241,
	})
}
